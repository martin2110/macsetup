#!/bin/bash

# macOS Setup Script
# Run this on a fresh Mac to install and configure everything

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if running on macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    log_error "This script is designed for macOS only."
    exit 1
fi

log_info "Starting macOS setup..."

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Install Xcode Command Line Tools
install_xcode_tools() {
    if ! xcode-select -p &> /dev/null; then
        log_info "Installing Xcode Command Line Tools..."
        xcode-select --install

        # Wait for installation to complete
        until xcode-select -p &> /dev/null; do
            sleep 5
        done
        log_success "Xcode Command Line Tools installed"
    else
        log_success "Xcode Command Line Tools already installed"
    fi
}

# Install Homebrew
install_homebrew() {
    if ! command_exists brew; then
        log_info "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        # Add Homebrew to PATH for Apple Silicon Macs
        if [[ $(uname -m) == "arm64" ]]; then
            echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
            eval "$(/opt/homebrew/bin/brew shellenv)"
        fi

        log_success "Homebrew installed"
    else
        log_success "Homebrew already installed"
    fi
}

# Install Ansible
install_ansible() {
    if ! command_exists ansible; then
        log_info "Installing Ansible via Homebrew..."
        brew install ansible
        log_success "Ansible installed"
    else
        log_success "Ansible already installed"
    fi
}

# Install packages from Brewfile
install_packages() {
    if [[ -f "Brewfile" ]]; then
        log_info "Installing packages from Brewfile..."
        brew bundle --file=Brewfile
        log_success "Brewfile packages installed"
    else
        log_warning "Brewfile not found, skipping package installation"
    fi
}

# Run Ansible playbook
run_ansible() {
    if [[ -f "playbook.yml" ]]; then
        log_info "Running Ansible playbook..."
        ansible-playbook playbook.yml -i inventory.yml
        log_success "Ansible playbook completed"
    else
        log_warning "playbook.yml not found, skipping Ansible configuration"
    fi
}

# Main installation flow
main() {
    log_info "macOS Setup Script"
    log_info "=================="

    # Get current directory
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    cd "$SCRIPT_DIR"

    # Bootstrap phase
    log_info "Phase 1: Bootstrap"
    install_xcode_tools
    install_homebrew
    install_ansible

    # Package installation phase
    log_info "Phase 2: Package Installation"
    install_packages

    # Configuration phase
    log_info "Phase 3: System Configuration"
    run_ansible

    # Final steps
    log_info "Phase 4: Final Steps"
    log_info "Restarting Dock to apply changes..."
    killall Dock 2>/dev/null || true

    log_success "macOS setup complete!"
    log_info "You may need to restart your terminal or log out/in for all changes to take effect."
    log_info "Manual steps you may need to complete:"
    log_info "  - Sign into Mac App Store apps"
    log_info "  - Configure app-specific preferences"
    log_info "  - Set up SSH keys and Git credentials"
}

# Run main function
main "$@"